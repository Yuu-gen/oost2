<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>230</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Future&lt;T&gt;
--
- contents: T
- signal: Semaphor
--
+ setContents(contents: T): void
+ getContents(): T
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>570</x>
      <y>380</y>
      <w>140</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Letter
--
- text: String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>860</x>
      <y>480</y>
      <w>300</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>Collector
--
- storage: List&lt;Letter&gt;
- mutex: Semaphor
--
+ addLetter(l:Letter): void
+ getLetters(receiver: Paricipant): List&lt;Letter&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>560</x>
      <y>520</y>
      <w>180</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Participant
--
+ sendLetter(l:Letter): void
+ fetchLetters(): List&lt;Letter&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>630</x>
      <y>420</y>
      <w>80</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=receiver
r1=1 </panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>730</x>
      <y>550</y>
      <w>150</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1= sammelstelle
r1=1</panel_attributes>
    <additional_attributes>130.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>510</x>
      <y>660</y>
      <w>270</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>void sendLetter(Letter l){
   sammelstelle.addLetter(l);
}

List&lt;Letter&gt; fetchLetters(){
   return sammeltstelle.getLetters(this);
}

bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>510</x>
      <y>540</y>
      <w>70</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>700</x>
      <y>400</y>
      <w>260</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1= storage
r1= *</panel_attributes>
    <additional_attributes>10.0;20.0;240.0;20.0;240.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>810</x>
      <y>720</y>
      <w>310</w>
      <h>310</h>
    </coordinates>
    <panel_attributes>void addLetter(Letter l){
   this.mutex.down();
   this.storage.add(l);
   this.mutex.up();
   this.fireUpdate(l.getReceiver());
}

List&lt;Letter&gt; getLetters(Participant receiver){
   List&lt;Letter&gt; results = new ArrayList&lt;Letter&gt;();
   this.mutex.down();
   for(Letter curLetter : storage){
      if(curLetter.getReceiver() == receiver){
   	     results.add(curLetter);
   	   }
  	  }
  	  storage.removeAll(results);
  	  this.mutex.up
  	  return results;
}

bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>940</x>
      <y>620</y>
      <w>30</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>340</x>
      <y>450</y>
      <w>180</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
Observer
--
update(p: Participant): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1030</x>
      <y>290</y>
      <w>200</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>/Observable/
&lt;&lt;abstract class&gt;&gt;
--
-observers: List&lt;Observer&gt;
--
addObserver(o: Observer)
removeObserver(o: Observer)
fireUpdate(receiver: Participant)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1060</x>
      <y>400</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1170</x>
      <y>420</y>
      <w>330</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>void fireUpdate(Participant receiver) {
   this.observers.forEach((o)-&gt;o.update(receiver));
}
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1220</x>
      <y>390</y>
      <w>80</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>510</x>
      <y>470</y>
      <w>120</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;10.0;100.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>250</x>
      <y>560</y>
      <w>200</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>void update(Participant p){
	if (p == this){
      this.fetchLetters();
   }
}
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>300</x>
      <y>490</y>
      <w>60</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>40.0;10.0;10.0;10.0;10.0;70.0</additional_attributes>
  </element>
</diagram>
